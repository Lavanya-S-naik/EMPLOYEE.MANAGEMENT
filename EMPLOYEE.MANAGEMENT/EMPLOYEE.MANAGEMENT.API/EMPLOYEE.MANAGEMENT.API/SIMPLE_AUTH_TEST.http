### Simple JWT Authentication Test for Employee Management API
### Base URL (update as needed)
@baseUrl = https://localhost:7000
@token = 

### 1. Login as Admin User
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

### 2. Login as Regular User
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "username": "user",
  "password": "user123"
}

### 3. Login as Test User
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "username": "test",
  "password": "test123"
}

### 4. Validate JWT Token
POST {{baseUrl}}/api/auth/validate
Content-Type: application/json

"{{token}}"

### 5. Get All Employees (requires authentication)
GET {{baseUrl}}/api/employees
Authorization: Bearer {{token}}

### 6. Get Employee by ID (requires authentication)
GET {{baseUrl}}/api/employees/1
Authorization: Bearer {{token}}

### 7. Create New Employee (requires authentication)
POST {{baseUrl}}/api/employees
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john.doe@example.com",
  "department": "IT",
  "salary": 75000,
  "dateOfJoining": "2024-01-15T00:00:00Z",
  "isActive": true
}

### 8. Update Employee (requires authentication)
PUT {{baseUrl}}/api/employees/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "id": "1",
  "name": "John Doe Updated",
  "email": "john.doe.updated@example.com",
  "department": "Engineering",
  "salary": 80000,
  "dateOfJoining": "2024-01-15T00:00:00Z",
  "isActive": true
}

### 9. Delete Employee (requires authentication)
DELETE {{baseUrl}}/api/employees/1
Authorization: Bearer {{token}}

### Instructions:
### 1. First run any login request (#1, #2, or #3) to get a JWT token
### 2. Copy the "token" value from the response
### 3. Replace {{token}} in the Authorization header with the actual token
### 4. Now you can call any of the protected endpoints (#4-#8)
### 5. The token expires after 60 minutes

### Available Users:
### - admin / admin123
### - user / user123  
### - test / test123
